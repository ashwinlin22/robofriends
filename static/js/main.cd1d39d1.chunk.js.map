{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","style","overflowY","height","children","App","onSearchChange","event","setState","searchfield","target","value","state","fetch","then","response","json","users","filteredRobots","this","filter","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAgBeA,EAdF,SAACC,GAAW,IAChBC,EAAoBD,EAApBC,KAAMC,EAAcF,EAAdE,MAAOC,EAAOH,EAAPG,GACrB,OACC,sBAAKC,UAAW,sDAAhB,UACC,qBAAKC,IAAM,SAASC,IAAG,+BAA2BH,EAA3B,cACvB,gCACC,6BAAKF,IACL,4BAAIC,WCeOK,EApBE,SAAC,GAAe,IAAdC,EAAa,EAAbA,OAClB,OACC,8BAECA,EAAOC,KAAI,SAACC,EAAMC,GACjB,OACC,cAAC,EAAD,CAEAR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAASM,EAAOG,GAAGT,OAHdS,SCKKC,EAdG,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,aACpB,OACC,qBAAKT,UAAW,MAAhB,SACC,uBACCA,UAAY,kCACZU,KAAO,SACPC,YAAc,gBACdC,SAAYH,OCCDI,EARA,SAACjB,GACf,OACC,qBAAKkB,MAAQ,CAACC,UAAW,SAAUC,OAAQ,SAA3C,SACCpB,EAAMqB,YCyCMC,G,wDAvCd,aAAe,IAAD,8BACb,gBAaFC,eAAiB,SAACC,GACjB,EAAKC,SAAS,CAACC,YAAcF,EAAMG,OAAOC,SAbzC,EAAKC,MAAQ,CACZrB,OAAS,GACTkB,YAAa,KAJD,E,gEAQK,IAAD,OAClBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAEjB,OAAS0B,S,+BAOhC,IAAD,OACDC,EAAiBC,KAAKP,MAAMrB,OAAO6B,QAAO,SAAA7B,GAChD,OAAOA,EAAOP,KAAKqC,cAAcC,SAAS,EAAKV,MAAMH,YAAYY,kBAEjE,OAAiC,IAA7BF,KAAKP,MAAMrB,OAAOgC,OACd,yCAGP,sBAAKpC,UAAY,KAAjB,UACC,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAAgBuB,KAAKb,iBAChC,cAAC,EAAD,UACC,cAAC,EAAD,CAAUf,OAAU2B,a,GA/BPM,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,SAKhDX,M","file":"static/js/main.cd1d39d1.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = (props) => {\n\tconst { name, email, id } = props;\n\treturn (\n\t\t<div className ='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n\t\t\t<img alt = 'robots' src ={`https://robohash.org/${id}?200x200`} />\n\t\t\t<div>\n\t\t\t\t<h2>{name}</h2>\n\t\t\t\t<p>{email}</p>\n\t\t\t</div>\n\t\t</div>\n\n\t);\n}\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\n\n\nconst CardList = ({robots }) => {\n\treturn (\n\t\t<div>\n\t\t{\n\t\t\trobots.map((user, i) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Card \n\t\t\t\t\tkey={i} \n\t\t\t\t\tid={robots[i].id} \n\t\t\t\t\tname={robots[i].name} \n\t\t\t\t\temail = {robots[i].email}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})\n\t\t}\n\t\t</div>\n\t\n\t);\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({ searchChange}) =>{\n\treturn (\n\t\t<div className ='pa2'>\n\t\t\t<input \n\t\t\t\tclassName = 'pa3 ba b--green bg-lighest-blue'\n\t\t\t\ttype = 'search' \n\t\t\t\tplaceholder = 'search robots' \n\t\t\t\tonChange = {searchChange}\n\t\t\t/>\n\t\t</div>\n\n\t);\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n\treturn (\n\t\t<div style ={{overflowY: 'scroll', height: '800px' }}>\n\t\t{props.children}\n\t\t</div>\n\t);\n}\n\nexport default Scroll;","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport './App.css';\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\trobots : [],\n\t\t\tsearchfield: \" \"\n\t\t}\n\t}\n\ncomponentDidMount(){\n\tfetch('https://jsonplaceholder.typicode.com/users')\n\t.then(response => response.json())\n\t\t.then(users => this.setState({ robots : users}))\n}\n\nonSearchChange = (event) => {\n\tthis.setState({searchfield : event.target.value})\t\n}\n\n\trender(){\n\t\tconst filteredRobots = this.state.robots.filter(robots =>{\n\t\treturn robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n\t})\n\t\tif (this.state.robots.length === 0){\n\t\t\treturn <h1>Loading</h1>\n\t\t} else {\n\t\t\treturn (\n\t\t\t<div className = 'tc'>\n\t\t\t\t<h1 className=\"f1\">RoboFriends</h1>\n\t\t\t\t<SearchBox searchChange = {this.onSearchChange}/>\n\t\t\t\t<Scroll>\n\t\t\t\t\t<CardList robots = {filteredRobots}/>\n\t\t\t\t</Scroll>\n\t\t\t</div>\n\t\t);\n\t\t}\n\t\t\n\t}\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}